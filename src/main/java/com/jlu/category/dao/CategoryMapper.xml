<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jlu.category.dao.CategoryMapper" >
  <resultMap id="BaseResultMap" type="com.jlu.category.model.Category" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="pid" property="pid" jdbcType="BIGINT" />
    <result column="level" property="level" jdbcType="INTEGER" />
    <result column="articleId" property="articleid" jdbcType="BIGINT" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="userId" property="userid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, type, pid, level, articleId, url, userId
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from category
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from category
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.jlu.category.model.Category" >
    insert into category (id, name, type, 
      pid, level, articleId, 
      url, userId)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{pid,jdbcType=BIGINT}, #{level,jdbcType=INTEGER}, #{articleid,jdbcType=BIGINT}, 
      #{url,jdbcType=VARCHAR}, #{userid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.jlu.category.model.Category" >
    insert into category
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="pid != null" >
        pid,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="articleid != null" >
        articleId,
      </if>
      <if test="url != null" >
        url,
      </if>
      <if test="userid != null" >
        userId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="pid != null" >
        #{pid,jdbcType=BIGINT},
      </if>
      <if test="level != null" >
        #{level,jdbcType=INTEGER},
      </if>
      <if test="articleid != null" >
        #{articleid,jdbcType=BIGINT},
      </if>
      <if test="url != null" >
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jlu.category.model.Category" >
    update category
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="pid != null" >
        pid = #{pid,jdbcType=BIGINT},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="articleid != null" >
        articleId = #{articleid,jdbcType=BIGINT},
      </if>
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        userId = #{userid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jlu.category.model.Category" >
    update category
    set name = #{name,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      pid = #{pid,jdbcType=BIGINT},
      level = #{level,jdbcType=INTEGER},
      articleId = #{articleid,jdbcType=BIGINT},
      url = #{url,jdbcType=VARCHAR},
      userId = #{userid,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>